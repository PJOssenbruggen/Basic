colMeans(outputrunszip)
devtools::load_all(".")
library(cartools)
devtools::document()
performance(outputruns,outputrunszip)
devtools::load_all(".")
library(cartools)
devtools::load_all(".")
library(cartools)
devtools::document()
performance(outputruns,outputrunszip)
head(run1)
n1
print(output)
output[7,1] - output[7,3]
output[7,2]
output[7,2] * sqrt(n1)
output[7,2] * sqrt(n1)/n1
output[7,4] * sqrt(n2)/n2
sqrt(se1^2 + se2^2)
se1 <- output[7,2] * sqrt(n1)/n1
se2 <- output[7,4] * sqrt(n2)/n2
sqrt(se1^2 + se2^2)
se1 <- output[7,2] * sqrt(n1)/n1
se2 <- output[7,4] * sqrt(n2)/n2
se  <- sqrt(se1^2 + se2^2)
z   <- (output[7,1] - output[7,3])/se
z
mn2
devtools::load_all(".")
library(cartools)
devtools::document()
performance(outputruns,outputrunszip)
n1         <- dim(run1)[1]
n2         <- dim(run2)[1]
for(i in 1:7) {
se1           <- output[i,2] * sqrt(n1)/n1
se2           <- output[i,4] * sqrt(n2)/n2
se            <- sqrt(se1^2 + se2^2)
output[i,5]   <- (output[i,1] - output[i,3])/se
}
print(output)
i=7
output[i,1]
output[i,3]
output[i,2] * sqrt(n1)/n1
output[i,4] * sqrt(n2)/n2
se1           <- output[i,2] * sqrt(n1)/n1
se2           <- output[i,4] * sqrt(n2)/n2
se            <- sqrt(se1^2 + se2^2)
se
devtools::load_all(".")
library(cartools)
devtools::document()
performance(outputruns,outputrunszip)
output
?rnorm
qnorm(0.975)
qnorm(0.95)
devtools::load_all(".")
devtools::load_all(".")
library(cartools)
devtools::document()
performance(outputruns,outputrunszip)
devtools::load_all(".")
library(cartools)
devtools::document()
performance(outputruns,outputrunszip)
devtools::load_all(".")
library(cartools)
devtools::load_all(".")
library(cartools)
devtools::document()
performance(outputruns,outputrunszip)
?rnorm
devtools::load_all(".")
library(cartools)
library(cartools)
devtools::document()
performance(outputruns,outputrunszip)
devtools::load_all(".")
library(cartools)
devtools::document()
performance(outputruns,outputrunszip)
devtools::load_all(".")
library(cartools)
devtools::document()
performance(outputruns,outputrunszip)
10.5/7.9
bmfree2(50, 5, 0, 30, 50, 0.25, TRUE)
bmfree2(50, 5, 0, 30, 50, 0.25, type = TRUE)
bmfree2(0, 5, 0, 30, 0, 0.25, type = TRUE)
bmfree2(50, 5, 0, 30, 50, 0.25, type = TRUE)
performance(outputruns,outputrunszip)
devtools::load_all(".")
bmfree2(50, 5, 0, 30, 50, 0.25, type = TRUE)
library(cartools)
devtools::document()
bmfree2(50, 5, 0, 30, 50, 0.25, type = TRUE)
W
x
y
bmfree2(50, 5, 0, 30, 50, 0.25, type = TRUE)
W[N]
W[N] - y + x
W
(t - tstart)/(tend - tstart)
(t - tstart)/(tend - tstart) * (W[N] - y + x)
W - (t - tstart)/(tend - tstart) * (W[N] - y + x)
devtools::load_all(".")
library(cartools)
performance(outputruns,outputrunszip)
usd
usd <- 0
df1df2 <- brktrials4wrapper(nveh1,nveh2,umn,usd,xstart1,xstart2,step,tstart,tend,xfunnel,leff,type,browse)
df1df2 <- brktrials4wrapper(nveh1,nveh2,umn,usd,xstart1,xstart2,step,tstart,tend,xfunnel,leff,type,browse)
df1
df2
lst[[3]]
colMeans(lst[[3]])
performance(outputruns,outputrunszip)
schematic()
install.packages(c("devtools", "ggplot2", "mgcv", "rlang", "tinytex", "xfun"))
devtools::load_all(".")
library(cartools)
install.packages(c("devtools", "ggplot2", "mgcv", "rlang", "tinytex", "xfun"))
install.packages(c("devtools", "ggplot2", "mgcv", "rlang", "tinytex", "xfun"))
install.packages(c("devtools", "ggplot2", "mgcv", "rlang", "tinytex", "xfun"))
devtools::document()
schematic()
devtools::document()
devtools::load_all(".")
library(cartools)
devtools::document()
schematic()
devtools::load_all(".")
library(cartools)
devtools::document()
schematic()
devtools::load_all(".")
library(cartools)
devtools::document()
schematic()
devtools::load_all(".")
devtools::document()
df1df2 <- brktrials4wrapper(nveh1,nveh2,umn,usd,xstart1,xstart2,step,tstart,tend,xfunnel,leff,type,browse)
library(cartools)
df1df2 <- brktrials4wrapper(nveh1,nveh2,umn,usd,xstart1,xstart2,step,tstart,tend,xfunnel,leff,type,browse)
devtools::document()
df1df2 <- brktrials4wrapper(nveh1,nveh2,umn,usd,xstart1,xstart2,step,tstart,tend,xfunnel,leff,type,browse)
par(mfrow = c(1,2), pty = "s")
xlim    <- c(tstart,tend)
min.    <- min(as.numeric(unlist(lane[,nclm])), na.rm = TRUE)
max.    <- max(as.numeric(unlist(lane[,nclm])), na.rm = TRUE)
ylim    <- c(min., max.)
plot(tseq, lane[,2], type = "l", xlab = "t, seconds", lwd = 2,
ylab = "x, feet", ylim, xlim = xlim,col="blue")
abline(v = 0, col = gray(0.8))
abline(h = c(0, xfunnel), col = gray(0.8))
axis(side = 4, at = 0, labels = expression(x[0]))
axis(side = 4, at = xfunnel, labels = expression(x[e]))
axis(side = 3, at = tend/2, "Traffic Noise", tick = FALSE, line = -1)
mtext(bquote(u[0] == .(umn)), at = 0, cex = 0.75, adj = 0)
mtext(bquote(sigma[U] == .(usd)), at = tend, cex = 0.75, adj = 1)
index   <- seq(3,1+3*nveh,3)
for(i in 1:nveh) {
text(tend, max(lane[,nclm[i]]), labels = i, pos=4, cex=0.5, offset = 0.2)
text(0, min(lane[,nclm[i]]), labels = i, pos=2, cex=0.5, offset = 0.2)
}
for(i in 2:nveh) lines(tseq, lane[,nclm[i]], col = "blue", lwd = 2)
title(main = "Lane 1", sub = "Lane unsafe and disorderly.")
legend("topleft", legend = "", bty = "n")
}
bmfree2(41, 11, 16.5, 30, 10, 0.25, TRUE)
bmfree2
umn
usd
usd <- 5
devtools::load_all(".")
devtools::document()
bmfree2(umn, usd, 0, tend, 0, step, TRUE)
devtools::load_all(".")
library(cartools)
bmfree2(umn, usd, 0, tend, 0, step, TRUE)
devtools::load_all(".")
library(cartools)
bmfree2(umn, usd, 0, tend, 0, step, TRUE)
par(mfrow = c(1,2))
plot(t, u, typ = "l", ylab = "u, feet per second", xlab = "t, seconds",lwd = 2)
abline(h = x, col = gray(0.8))
abline(v = 0, col = gray(0.8))
title(main = "Traffic Volatity")
plot(t, y, typ = "l", ylab = "x, feet", xlab = "t, seconds", lwd = 2)
abline(h = x, col = gray(0.8))
abline(v = 0, col = gray(0.8))
title(main = "Traffic Volatity")
tux
devtools::load_all(".")
library(cartools)
devtools::load_all(".")
library(cartools)
library(cartools)
bmfree2(umn, usd, 0, tend, 0, step, TRUE)
par(mfrow = c(1,2))
plot(tux[,1], tux[,2], typ = "l", ylab = "u, feet per second", xlab = "t, seconds",lwd = 2,ylim=c(0,max(u)))
abline(h = x, col = gray(0.8))
abline(v = 0, col = gray(0.8))
title(main = "Traffic Volatity")
plot(tux[,1], tux[,3], typ = "l", ylab = "x, feet", xlab = "t, seconds", lwd = 2, ylim=c(0,max(x)))
abline(h = x, col = gray(0.8))
abline(v = 0, col = gray(0.8))
title(main = "Traffic Volatity")
devtools::load_all(".")
library(cartools)
devtools::load_all(".")
library(cartools)
devtools::document()
bmfree2(umn, usd, 0, tend, 0, step, TRUE)
par(mfrow = c(1,2))
plot(tux[,1], tux[,2], typ = "l", ylab = "u, feet per second", xlab = "t, seconds",lwd = 2,ylim=c(0,max(u)))
abline(h = 0, col = gray(0.8))
abline(v = 0, col = gray(0.8))
title(main = "Brownian Bridge Model", sub = "")
plot(tux[,1], tux[,3], typ = "l", ylab = "x, feet", xlab = "t, seconds", lwd = 2, ylim=c(0,max(x)))
abline(h = 0, col = gray(0.8))
abline(v = 0, col = gray(0.8))
title(main = "Desire-Line Trajectory")
devtools::load_all(".")
library(cartools)
devtools::load_all(".")
library(cartools)
devtools::document()
bmfree2(umn, usd, 0, tend, 0, step, TRUE)
par(mfrow = c(1,2))
plot(tux[,1], tux[,2], typ = "l", ylab = "u, feet per second", xlab = "t, seconds",lwd = 2,ylim=c(0,max(u)))
abline(h = 0, col = gray(0.8))
abline(v = 0, col = gray(0.8))
axis(side = 4, at = 5280/3600*umn, labels = u, lty = 3)
abline(h = 5280/3600*umn, col = gray(0.8))
title(main = "Brownian Bridge Model", sub = "")
axis(side = 4, at = 5280/3600*umn, labels = "u", lty = 3)
axis(side = 4, at = 5280/3600*umn, labels = "u", lty = 3, line = 0.5)
par(mfrow = c(1,2))
plot(tux[,1], tux[,2], typ = "l", ylab = "u, feet per second", xlab = "t, seconds",lwd = 2,ylim=c(0,max(u)))
abline(h = 0, col = gray(0.8))
abline(v = 0, col = gray(0.8))
axis(side = 4, at = 5280/3600*umn, labels = "u", lty = 3, line = 0.5)
abline(h = 5280/3600*umn, col = gray(0.8))
title(main = "Brownian Bridge Model", sub = "")
axis(side = 4, at = 5280/3600*umn, labels = "u", lty = 3, line = 0)
axis(side = 4, at = 5280/3600*umn, labels = "u", lty = 3, line = 0)
axis(side = 4, at = 5280/3600*umn, labels = "u", lty = 3, line = 0)
axis(side = 4, at = 5280/3600*umn, labels = "u", lty = 3, line = 0)
axis(side = 4, at = 5280/3600*umn, labels = "u", lty = 3, line = 0)
axis(side = 4, at = 5280/3600*umn, labels = "u", lty = 3, line = 0)
par(mfrow = c(1,2))
plot(tux[,1], tux[,2], typ = "l", ylab = "u, feet per second", xlab = "t, seconds",lwd = 2,ylim=c(0,max(u)))
abline(h = 0, col = gray(0.8))
abline(v = 0, col = gray(0.8))
axis(side = 4, at = 5280/3600*umn, labels = "u", lty = 3, line = 0)
abline(h = 5280/3600*umn, col = gray(0.8))
title(main = "Brownian Bridge Model", sub = "")
plot(tux[,1], tux[,3], typ = "l", ylab = "x, feet", xlab = "t, seconds", lwd = 2, ylim=c(0,max(x)))
abline(h = 0, col = gray(0.8))
abline(v = 0, col = gray(0.8))
lines(c(0,tend),(0,5280/3600*umn*tend))
title(main = "Desire-Line Trajectory")
lines(c(0,tend),c(0,5280/3600*umn*tend))
par(mfrow = c(1,2))
plot(tux[,1], tux[,2], typ = "l", ylab = "u, feet per second", xlab = "t, seconds",lwd = 2,ylim=c(0,max(u)))
abline(h = 0, col = gray(0.8))
abline(v = 0, col = gray(0.8))
axis(side = 4, at = 5280/3600*umn, labels = "u", lty = 2, line = 0)
abline(h = 5280/3600*umn, col = gray(0.8))
title(main = "Brownian Bridge Model", sub = "")
plot(tux[,1], tux[,3], typ = "l", ylab = "x, feet", xlab = "t, seconds", lwd = 2, ylim=c(0,max(x)))
abline(h = 0, col = gray(0.8))
abline(v = 0, col = gray(0.8))
lines(c(0,tend),c(0,5280/3600*umn*tend),lty=2)
title(main = "Desire-Line Trajectory")
devtools::load_all(".")
library(cartools)
devtools::document()
bmfree2(umn, usd, 0, tend, 0, step, TRUE)
devtools::load_all(".")
library(cartools)
devtools::load_all(".")
library(cartools)
devtools::document()
bmfree2(umn, usd, 0, tend, 0, step, TRUE)
xstart
devtools::load_all(".")
library(cartools)
devtools::document()
bmfree2(umn, usd, 0, tend, 0, step, TRUE)
devtools::document()
bmfree2(umn, usd, 0, tend, 0, step, TRUE)
devtools::load_all(".")
library(cartools)
devtools::document()
bmfree2(umn, usd, 0, tend, 0, step, TRUE)
devtools::load_all(".")
library(cartools)
devtools::load_all(".")
library(cartools)
devtools::document()
bmfree2(umn, usd, 0, tend, 0, step, TRUE)
y
tux[,3]
bmfree2(umn, usd, 0, tend, 0, step, TRUE)
tux[,3]
rep(xstart,length(t))
xstart
xstart
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
devtools::load_all(".")
library(cartools)
devtools::document()
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
y
xstart
x[1]
devtools::load_all(".")
library(cartools)
devtools::document()
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
devtools::load_all(".")
library(cartools)
devtools::document()
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
devtools::load_all(".")
devtools::load_all(".")
library(cartools)
devtools::document()
devtools::load_all(".")
devtools::document()
library(cartools)
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
devtools::load_all(".")
library(cartools)
devtools::document()
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
devtools::load_all(".")
devtools::document()
library(cartools)
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
lines(tux[,1], x)
legend("topright", legend = c("Lead vehicle","Following vehicle"),
lwd = c(2,1), bty = "n")
devtools::load_all(".")
devtools::document()
library(cartools)
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
devtools::load_all(".")
library(cartools)
devtools::document()
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
devtools::load_all(".")
library(cartools)
devtools::load_all(".")
devtools::document()
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
devtools::load_all(".")
library(cartools)
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
umn
devtools::load_all(".")
library(cartools)
devtools::load_all(".")
library(cartools)
devtools::document()
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
par(mfrow = c(1,2))
plot(tux[,1], tux[,2], typ = "l", ylab = "u, feet per second", xlab = "t, seconds",lwd = 2,ylim=c(0,120))
abline(h = 0, col = gray(0.8))
abline(v = c(0,tend), col = gray(0.8))
axis(side = 4, at = 5280/3600*umn, labels = "u", lty = 2, line = -1,tick=FALSE)
abline(h = 5280/3600*umn, lty = 2)
title(main = "Brownian Bridge Model", sub = "Lead vehicle.")
plot(tux[,1], tux[,3], typ = "l", ylab = "x, feet", xlab = "t, seconds", lwd = 2, col = "blue", ylim=c(-1000,max(tux[,3])))
abline(h = c(0,-500), col = gray(0.8))
abline(v = c(0,tend), col = gray(0.8))
lines(c(0,tend),c(xstart,xstart+5280/3600*umn*tend),lty=2)
axis(side = 4, at = -500, labels = expression(x[e]), lty = 2, line = -1,tick=FALSE)
axis(side = 4, at = 0, labels = expression(x[0]), lty = 2, line = -1,tick=FALSE)
title(main = "Desire-Line Trajectory")
t     <- seq(tstart, tend, step)
N     <- length(t)
W     <- numeric(N)
usd   <- 5280/3600*usd
for(i in 2:(N)) W[i] <- W[i-1] + usd * sqrt(step) * rnorm(1)
x     <- 5280/3600*umn
y     <- 5280/3600*umn
u     <- x + (W - (t - tstart)/(tend - tstart) * (W[N] - y + x))
for(i in 1:N) if(u[i] <= 0) u[i] = 0
x[1]  <- - 800
for(i in 2:N) x[i] <- x[i-1] + step * u[i-1]
lines(tux[,1], x, col = "red", lwd = 2)
legend("topleft", legend = c("Lead vehicle","Following vehicle"),
lwd = c(2,2), col = c("blue","red"), bty = "n")
par(mfrow = c(1,2))
plot(tux[,1], tux[,2], typ = "l", ylab = "u, feet per second", xlab = "t, seconds",lwd = 2,ylim=c(0,120))
abline(h = 0, col = gray(0.8))
abline(v = c(0,tend), col = gray(0.8))
axis(side = 4, at = 5280/3600*umn, labels = "u", lty = 2, line = -1,tick=FALSE)
abline(h = 5280/3600*umn, lty = 2)
title(main = "Brownian Bridge Model", sub = "Lead vehicle.")
plot(tux[,1], tux[,3], typ = "l", ylab = "x, feet", xlab = "t, seconds", lwd = 2, col = "blue", ylim=c(-1000,max(tux[,3])))
abline(h = c(0,-500), col = gray(0.8))
abline(v = c(0,tend), col = gray(0.8))
lines(c(0,tend),c(xstart,xstart+5280/3600*umn*tend),lty=2)
axis(side = 4, at = -500, labels = expression(x[e]), lty = 2, line = -1,tick=FALSE)
axis(side = 4, at = 0, labels = expression(x[0]), lty = 2, line = -1,tick=FALSE)
title(main = "Desire-Line Trajectory")
t     <- seq(tstart, tend, step)
N     <- length(t)
W     <- numeric(N)
usd   <- 5280/3600*usd
for(i in 2:(N)) W[i] <- W[i-1] + usd * sqrt(step) * rnorm(1)
x     <- 5280/3600*umn
y     <- 5280/3600*umn
u     <- x + (W - (t - tstart)/(tend - tstart) * (W[N] - y + x))
for(i in 1:N) if(u[i] <= 0) u[i] = 0
x[1]  <- -800
for(i in 2:N) x[i] <- x[i-1] + step * u[i-1]
lines(tux[,1], x, col = "red", lwd = 2)
legend("topleft", legend = c("Lead vehicle","Following vehicle"),
lwd = c(2,2), col = c("blue","red"), bty = "n")
x
N
dim(tuxvfix3())
dim(tux)
x     <- rep(NA,N)
x[1]  <- -800
for(i in 2:N) x[i] <- x[i-1] + step * u[i-1]
lines(tux[,1], x, col = "red", lwd = 2)
x
devtools::load_all(".")
devtools::document()
library(cartools)
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
x
head(tux)
tux[tux[,3]<=0,1]
max(tux[tux[,3]<=0,1
max(tux[tux[,3]<=0,1])
max(tux[tux[,3]<=0,1])
max(tux[tux[,3]<=-500,1])
t1    <- max(tux[tux[,3]<=0,1])
t2    <- max(tux[tux[,3]<=-500,1])
axis(side = 4, at = t1, labels = expression(T[1]), lty = 2, line = -1,tick=FALSE)
devtools::load_all(".")
devtools::document()
library(cartools)
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
devtools::load_all(".")
library(cartools)
devtools::document()
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
abline(v = c(t1,t2),lty = 3)
abline(v = c(t1,t2),lty = 3)
abline(v = c(t1,t2),lty = 3)
abline(v = c(t1,t2),lty = 3)
abline(v)t1
abline(v=t1)
abline(v=t/2, lty = 3)
devtools::load_all(".")
library(cartools)
devtools::document()
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
devtools::load_all(".")
devtools::document()
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
usd
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
devtools::load_all(".")
library(cartools)
devtools::load_all(".")
library(cartools)
devtools::document()
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
matrix(c(dt, 0.5*dt^2, -0.5*dt^2, -dt^3/6), ncol = 2)
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
bmfree2(umn, usd, 0, tend, xstart, step, TRUE)
